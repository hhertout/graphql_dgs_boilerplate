plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'dgs.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('netflixDgsVersion', "10.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.netflix.graphql.dgs:dgs-starter-test'
    testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

dependencyManagement {
    imports {
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
    }
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"]
    packageName = 'dgs.example.demo.codegen'
    generateClient = true
}

bootRun {
    jvmArgs = [
            '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000'
    ]
}

test {
    useJUnitPlatform()
}